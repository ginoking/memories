name: deploy to gcp 
on: 
  push:
    branches: [ main ]
jobs:
  build:
    name: build image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps: 
      - name: check out code
        uses: actions/checkout@v4
      - name: configure GCP credentials
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: memory-410003
          token_format: access_token 
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
      - name: login to Artifact Registry
        uses: docker/login-action@v1
        with: 
          registry: asia-east1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
        # run: |-
        #   echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ env.REPOSITORY_REGION }}-docker.pkg.dev
          
      # - name: login aws ecr
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      # - name: build and push image to aws ecr
      #   id: build-image
      #   env: 
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
      #     IMAGE_TAG: latest
      #   run: 
      #     cd server
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     echo "Pushing image to ECR..."
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

